/* "env" variable is defined dynamically by sass-loader */
$env: development !default;

/* Hide element in production builds */
@if $env == 'production' {
	.hide-in-production:not(.godmode) {
		display: none !important;
	}
}

/* Increase margin between Font Awesome icons and labels */
.svg-inline--fa + .lbl {
	margin-left: rem(5);
}

/* SVG symbol class for Font Awesome */
.icon {
	width: 1em;
	height: 1em;
	vertical-align: -.125em;
}

/* Change the cursor to a pointer when the label is also a button */
label.btn[for] {
	cursor: pointer;
}

/* Responsive version for sizes (implements twbs/bootstrap#21943) */
@each $breakpoint in map-keys($grid-breakpoints) {
	@if $breakpoint != 'xs' {
		@include media-breakpoint-up($breakpoint) {
			$infix: breakpoint-infix($breakpoint, $grid-breakpoints);
			@each $prop, $abbrev in (width: w, height: h) {
				@each $size, $length in $sizes {
					.#{$abbrev}#{$infix}-#{$size} { #{$prop}: $length !important; }
				}
			}
		}
	}
}

/* Implementation of a multiselect dropdown */
.dropdown-menu.dropdown-menu-multiselect > .dropdown-item {
	&:active, &:hover, &:focus {
		color: inherit;
		background-color: transparent;
	}

	> .btn-group-toggle > .btn {
		&.btn-link {
			color: inherit;
			cursor: pointer;
		}

		&::before {
			display: inline-block;
			width: 1em;
			content: '';
		}

		&.active::before {
			content: 'âœ“';
		}
	}
}

/* Make Tagify fields display correctly with Bootstrap */
.form-control.tagify {
	height: auto;
	font-size: 15px;

	> tag {
		max-width: rem(200);

		> div > span {
			width: 100%;
			text-overflow: ellipsis;
		}
	}

	> tag > div {
		color: map-get($theme-colors, dark);
	}

	> tag > div::before {
		box-shadow: 0 0 0 rem(20) map-get($theme-colors, light) inset;
		border: rem(1) solid lighten(map-get($theme-colors, dark), 60%);
	}

	> tag:hover:not([readonly]) > div::before {
		box-shadow: 0 0 0 rem(20) map-get($theme-colors, light) inset;
		border: rem(1) solid lighten(map-get($theme-colors, dark), 30%);
	}

	> tag > x:hover {
		background: lighten(map-get($theme-colors, danger), 20%);
	}

	> tag > x:hover + div::before,
	> tag.tagify--notAllowed > div::before {
		box-shadow: 0 0 0 rem(20) lighten(map-get($theme-colors, danger), 40%) inset !important;
		border: rem(1) solid lighten(map-get($theme-colors, danger), 20%) !important;
	}
}

/* Responsive square box */
.square-box {
	position: relative;
	width: 100%;
	overflow: hidden;

	&:before {
		display: block;
		padding-top: 100%;
		content: '';
	}

	> .square-box-content {
		position: absolute;
		top: 0;
		left: 0;
		bottom: 0;
		right: 0;
	}

	&.square-box-centered {
		margin: 0 auto;

		> .square-box-content {
			display: flex;
			flex-direction: column;
			justify-content: center;
			align-items: center;
			text-align: center;
		}
	}
}
